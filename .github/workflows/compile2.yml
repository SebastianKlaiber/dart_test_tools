on:
  workflow_call:
    inputs:
      dartSdkVersion:
        type: string
        required: false
        default: stable
        description: The Dart-SDK version. Passed as "sdk" to "dart-lang/setup-dart".
      repository:
        type: string
        required: false
        description: The repository to check out. Passed as "repository" to "actions/checkout".
      workingDirectory:
        type: string
        required: false
        default: .
        description: The root directory of the dart package to build and test.
      buildRunner:
        type: boolean
        required: false
        default: false
        description: Specify whether build_runner is used in the project (defaults to false).
      hosts:
        type: string
        required: false
        default: '["ubuntu-latest","windows-latest","macos-latest"]'
        description: |
          The host operating systems to create binaries for.
          By default the latest versions of linux, windows and macos are used.
          Expects a JSON array of GitHub Action host OS specifies.

          Example:
          ["ubuntu-latest", "windows-latest", "macos-latest"]
      targets:
        type: string
        required: true
        description: |
          The names of the targets to be compiled. Must be JSON array of strings, each
          string beeing the name of a file in the bin/ folder, without the dart extension.

          Example:
          ["my-app"]
jobs:
  compile:
    name: Create compiled artifacts
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(format('{"host":{0},"target":{1}}', inputs.hosts, inputs.targets)) }}
    runs-on: ${{ matrix.host }}
    steps:
      - name: Install Dart-SDK (${{ inputs.dartSdkVersion }})
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ inputs.dartSdkVersion }}
      - name: Install yq (Windows)
        if: runner.os == 'Windows'
        run: choco install yq
      - name: Install yq (macOS)
        if: runner.os == 'macOS'
        run: brew install yq
      - name: Checkout repository ${{ inputs.repository }}
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.repository }}
      - name: Remove dependency overrides
        run: yq e -i "del(.dependency_overrides)" pubspec.yaml
        working-directory: ${{ inputs.workingDirectory }}
      - name: Restore dart packages
        run: dart pub get
        working-directory: ${{ inputs.workingDirectory }}
      - name: Create build files
        if: inputs.buildRunner
        run: dart run build_runner build
        working-directory: ${{ inputs.workingDirectory }}
      - name: Compile ${{ matrix.target }}
        run: dart compile exe 'bin/${{ matrix.target }}.dart'
        working-directory: ${{ inputs.workingDirectory }}
      - name: Upload compiled ${{ matrix.target }}.exe
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}-${{ matrix.host }}.exe
          path: ${{ inputs.workingDirectory }}/bin/${{ matrix.target }}.exe
